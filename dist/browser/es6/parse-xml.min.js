const parseXml=(()=>{function n(n){const t=n.indexOf("<");return-1===t?{node:n,string:""}:{node:n.substring(0,t),string:n.substring(t)}}function t(n){const t=[];let s=null;for(let r=0,e=n.length;r<e;r++){const e=n.charAt(r);'"'!==e&&"'"!==e||(null===s?s=e:s===e&&(s=null)),null===s&&" "===e&&t.push(r)}t.push(-1);const r=[];let e=0;for(let s=0,u=t.length;s<u;s++){const u=t[s];-1===u?r.push(n.substring(e)):(r.push(n.substring(e,u)),e=u+1)}const u={name:r.shift()};return 0!==r.length&&(u.attributes=r.reduce(((n,t)=>{const[s,r]=t.split("=");return n[s]=r.substring(1,r.length-1),n}),{})),u}function s(n){const s=n.indexOf(">"),r="/"!==n.charAt(s-1),u=r?s:s-1,i=t(n.substring(1,u));if(n=n.substring(s+1),r){const{nodes:t,string:s}=e(n);i.children=t,n=s.substring(s.indexOf(">")+1)}return{node:i,string:n}}function r(n){const s=n.indexOf(">");return{node:{...t(n.substring(2,s-1)),isDeclaration:!0},string:n.substring(s+1)}}function e(t){const e=[];for(;t.length>0&&("<"!==t.charAt(0)||"/"!==t.charAt(1));){const{node:u,string:i}="<"===t.charAt(0)?"?"===t.charAt(1)?r(t):s(t):n(t);e.push(u),t=i}return{nodes:e,string:t}}return function(n){return e(n).nodes}})();
//# sourceMappingURL=parse-xml.min.js.map
