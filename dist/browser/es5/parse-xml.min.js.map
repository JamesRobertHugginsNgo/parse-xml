{"version":3,"file":"parse-xml.min.js","sources":["parse-xml.min.js"],"sourcesContent":["\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar parseXml = function () {\n  function processText(string) {\n    var index = string.indexOf('<');\n\n    if (index === -1) {\n      return {\n        node: string,\n        string: ''\n      };\n    }\n\n    return {\n      node: string.substring(0, index),\n      string: string.substring(index)\n    };\n  }\n\n  function processTag(string) {\n    var openTagStartIndex = string.charAt(1) === '?' ? 2 : 1;\n    var openTagEndIndex = string.indexOf('>');\n    var isContainer = openTagStartIndex === 1 && string.charAt(openTagEndIndex - 1) !== '/' || openTagStartIndex === 2 && string.charAt(openTagEndIndex - 1) !== '?';\n    var openTagContentEndIndex = isContainer ? openTagEndIndex : openTagEndIndex - 1;\n    var tagContent = string.substring(openTagStartIndex, openTagContentEndIndex);\n    var spaceIndexes = [];\n    var quote = null;\n\n    for (var index = 0, length = tagContent.length; index < length; index++) {\n      var _char = tagContent.charAt(index);\n\n      if (_char === '\"' || _char === '\\'') {\n        if (quote === null) {\n          quote = _char;\n        } else if (quote === _char) {\n          quote = null;\n        }\n      }\n\n      if (quote === null && _char === ' ') {\n        spaceIndexes.push(index);\n      }\n    }\n\n    spaceIndexes.push(-1);\n    var tagItems = [];\n    var lastSpaceIndex = 0;\n\n    for (var _index = 0, _length = spaceIndexes.length; _index < _length; _index++) {\n      var nextSpaceIndex = spaceIndexes[_index];\n\n      if (nextSpaceIndex === -1) {\n        tagItems.push(tagContent.substring(lastSpaceIndex));\n      } else {\n        tagItems.push(tagContent.substring(lastSpaceIndex, nextSpaceIndex));\n        lastSpaceIndex = nextSpaceIndex + 1;\n      }\n    }\n\n    var node = {\n      name: tagItems.shift()\n    };\n\n    if (openTagStartIndex === 2) {\n      node.isDeclaration = true;\n    }\n\n    if (tagItems.length !== 0) {\n      node.attributes = tagItems.reduce(function (acc, cur) {\n        var _cur$split = cur.split('='),\n            _cur$split2 = _slicedToArray(_cur$split, 2),\n            name = _cur$split2[0],\n            value = _cur$split2[1];\n\n        acc[name] = value.substring(1, value.length - 1);\n        return acc;\n      }, {});\n    }\n\n    string = string.substring(openTagEndIndex + 1);\n\n    if (isContainer) {\n      var _processChildren = processChildren(string),\n          nodes = _processChildren.nodes,\n          newString = _processChildren.string;\n\n      node.children = nodes;\n      string = newString.substring(newString.indexOf('>') + 1);\n    }\n\n    return {\n      node: node,\n      string: string\n    };\n  }\n\n  function processChildren(string) {\n    var nodes = [];\n\n    while (string.length > 0 && !(string.charAt(0) === '<' && string.charAt(1) === '/')) {\n      var _ref = string.charAt(0) === '<' ? processTag(string) : processText(string),\n          node = _ref.node,\n          newString = _ref.string;\n\n      nodes.push(node);\n      string = newString;\n    }\n\n    return {\n      nodes: nodes,\n      string: string\n    };\n  }\n\n  return function (string) {\n    return processChildren(string).nodes;\n  };\n}();\n/* exported parseXml */"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","value","err","isArray","parseXml","processChildren","string","nodes","charAt","_ref","openTagStartIndex","openTagEndIndex","indexOf","isContainer","tagContent","substring","spaceIndexes","quote","index","_char","tagItems","lastSpaceIndex","_index","_length","nextSpaceIndex","node","shift","isDeclaration","attributes","reduce","acc","cur","_cur$split2","split","_processChildren","newString","children","processTag"],"mappings":"aAEA,SAASA,eAAeC,EAAKC,GAAK,OAAOC,gBAAgBF,IAAQG,sBAAsBH,EAAKC,IAAMG,4BAA4BJ,EAAKC,IAAMI,mBAEzI,SAASA,mBAAqB,MAAM,IAAIC,UAAU,6IAElD,SAASF,4BAA4BG,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOE,kBAAkBF,EAAGC,GAAS,IAAIE,EAAIC,OAAOC,UAAUC,SAASC,KAAKP,GAAGQ,MAAM,GAAI,GAAiE,MAAU,SAAlCL,EAA3B,WAANA,GAAkBH,EAAES,YAAiBT,EAAES,YAAYC,KAAUP,IAAqB,QAANA,EAAoBQ,MAAMC,KAAKZ,GAAc,cAANG,GAAqB,2CAA2CU,KAAKV,GAAWD,kBAAkBF,EAAGC,QAAzG,GAE7S,SAASC,kBAAkBT,EAAKqB,IAAkB,MAAPA,GAAeA,EAAMrB,EAAIsB,UAAQD,EAAMrB,EAAIsB,QAAQ,IAAK,IAAIrB,EAAI,EAAGsB,EAAO,IAAIL,MAAMG,GAAMpB,EAAIoB,EAAKpB,IAAOsB,EAAKtB,GAAKD,EAAIC,GAAM,OAAOsB,EAEhL,SAASpB,sBAAsBH,EAAKC,GAAK,IAAIuB,EAAY,MAAPxB,EAAc,KAAyB,oBAAXyB,QAA0BzB,EAAIyB,OAAOC,WAAa1B,EAAI,cAAe,GAAU,MAANwB,EAAJ,CAAwB,IAAkDG,EAAIC,EAAlDC,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAmB,IAAM,IAAKP,EAAKA,EAAGV,KAAKd,KAAQ8B,GAAMH,EAAKH,EAAGQ,QAAQC,QAAoBJ,EAAKK,KAAKP,EAAGQ,QAAYlC,GAAK4B,EAAKP,SAAWrB,GAA3D6B,GAAK,IAAoE,MAAOM,GAAOL,GAAK,EAAMH,EAAKQ,EAAO,QAAU,IAAWN,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAAO,QAAU,GAAIO,EAAI,MAAMH,GAAQ,OAAOC,GAE1f,SAAS3B,gBAAgBF,GAAO,GAAIkB,MAAMmB,QAAQrC,GAAM,OAAOA,EAE/D,IAAIsC,SAAW,WA8Fb,SAASC,EAAgBC,GAGvB,IAFA,IAAIC,EAAQ,GAEW,EAAhBD,EAAOlB,SAAqC,MAArBkB,EAAOE,OAAO,IAAmC,MAArBF,EAAOE,OAAO,KAAa,CACnF,IAAIC,EAA4B,MAArBH,EAAOE,OAAO,GAjF7B,SAAoBF,GASlB,IARA,IAAII,EAAyC,MAArBJ,EAAOE,OAAO,GAAa,EAAI,EACnDG,EAAkBL,EAAOM,QAAQ,KACjCC,EAAoC,GAAtBH,GAAkE,MAAvCJ,EAAOE,OAAOG,EAAkB,IAAoC,GAAtBD,GAAkE,MAAvCJ,EAAOE,OAAOG,EAAkB,GAElJG,EAAaR,EAAOS,UAAUL,EADLG,EAAcF,EAAkBA,EAAkB,GAE3EK,EAAe,GACfC,EAAQ,KAEHC,EAAQ,EAAG9B,EAAS0B,EAAW1B,OAAQ8B,EAAQ9B,EAAQ8B,IAAS,CACvE,IAAIC,EAAQL,EAAWN,OAAOU,GAEhB,MAAVC,GAA2B,MAAVA,IACL,OAAVF,EACFA,EAAQE,EACCF,IAAUE,IACnBF,EAAQ,OAIE,OAAVA,GAA4B,MAAVE,GACpBH,EAAahB,KAAKkB,GAItBF,EAAahB,MAAM,GAInB,IAHA,IAAIoB,EAAW,GACXC,EAAiB,EAEZC,EAAS,EAAGC,EAAUP,EAAa5B,OAAQkC,EAASC,EAASD,IAAU,CAC9E,IAAIE,EAAiBR,EAAaM,IAEV,IAApBE,EACFJ,EAASpB,KAAKc,EAAWC,UAAUM,KAEnCD,EAASpB,KAAKc,EAAWC,UAAUM,EAAgBG,IACnDH,EAAiBG,EAAiB,GAItC,IAAIC,EAAO,CACT1C,KAAMqC,EAASM,SA8BjB,OA3B0B,GAAtBhB,IACFe,EAAKE,eAAgB,GAGC,IAApBP,EAAShC,SACXqC,EAAKG,WAAaR,EAASS,OAAO,SAAUC,EAAKC,GAC/C,IACIC,EAAcnE,eADDkE,EAAIE,MAAM,KACkB,GACzClD,EAAOiD,EAAY,GACnB/B,EAAQ+B,EAAY,GAGxB,OADAF,EAAI/C,GAAQkB,EAAMc,UAAU,EAAGd,EAAMb,OAAS,GACvC0C,GACN,KAGLxB,EAASA,EAAOS,UAAUJ,EAAkB,GAExCE,IAEEN,GADA2B,EAAmB7B,EAAgBC,IACVC,MACzB4B,EAAYD,EAAiB5B,OAEjCmB,EAAKW,SAAW7B,EAChBD,EAAS6B,EAAUpB,UAAUoB,EAAUvB,QAAQ,KAAO,IAGjD,CACLa,KAAMA,EACNnB,OAAQA,GAQ8B+B,CAAW/B,IAhG/CY,OAAAA,GAEW,KAFXA,GADeZ,EAiGsDA,GAhGtDM,QAAQ,MAGlB,CACLa,KAAMnB,EACNA,OAAQ,IAIL,CACLmB,KAAMnB,EAAOS,UAAU,EAAGG,GAC1BZ,OAAQA,EAAOS,UAAUG,KAsFrBO,EAAOhB,EAAKgB,KACZU,EAAY1B,EAAKH,OAErBC,EAAMP,KAAKyB,GACXnB,EAAS6B,EAGX,MAAO,CACL5B,MAAOA,EACPD,OAAQA,GAIZ,OAAO,SAAUA,GACf,OAAOD,EAAgBC,GAAQC,OAjHpB"}